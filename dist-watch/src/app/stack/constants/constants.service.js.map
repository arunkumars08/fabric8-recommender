{"version":3,"file":"constants.service.js","sourceRoot":"","sources":["../../../../../src/app/stack/constants/constants.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAGjD,IAAa,eAAe;IACxB;IAAgB,CAAC;IAEjB;;;;;;;;;;OAUG;IACH,qCAAW,GAAX,UAAY,SAAiB;QACzB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,QAAQ;YAC9B,EAAE,CAAC,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACxC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;YACD,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,eAAe;IAD3B,UAAU,EAAE;;GACA,eAAe,CAwB3B;SAxBY,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { MESSAGE_MAP } from './constants-mapper';\n\n@Injectable()\nexport class GlobalConstants {\n    constructor() { }\n\n    /**\n     * getMessages - gets the componentKey as a string and returns the Observable\n     * \n     * The component here is the key that enables to load the desired component.\n     * For eg.) To load the messages for StackDetailsComponent,\n     * call getMessages('stackDetails')\n     * \n     * The key mapping is found in constants-mapper.ts\n     * \n     * In case no match is found, it returns a null.\n     */\n    getMessages(component: string): Observable<any> {\n        return Observable.create((observer) => {\n            if (MESSAGE_MAP.hasOwnProperty(component)) {\n                observer.next(MESSAGE_MAP[component]);\n            } else {\n                observer.next(null);\n            }\n            observer.complete();\n        });\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}