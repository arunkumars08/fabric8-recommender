{"version":3,"file":"feedback.component.js","sourceRoot":"","sources":["../../../../../src/app/stack/feedback/feedback.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnChanges} from '@angular/core';\n\nimport {FeedbackService} from './feedback.service';\n\n@Component({\n    selector: 'feedback',\n    templateUrl: './feedback.component.html',\n    providers: [FeedbackService],\n    styleUrls: ['feedback.component.scss']\n})\n\nexport class FeedbackComponent implements OnChanges {\n    @Input() config: any;\n    public canShowModal: boolean = false;\n    public hasEnteredFeedback: boolean = false;\n    public result: any = {};\n    public mouseover: Array<any> = [];\n\n    public responseClass: string;\n    public responseMessage: string;\n\n    private feedbackItems: any = {};\n\n    constructor(private service: FeedbackService) {}\n\n    ngOnChanges(): void {\n        console.log(this.config);\n        this.feedbackItems = this.config.poll;\n        for (let i in this.feedbackItems) {\n            if (this.feedbackItems.hasOwnProperty(i)) {\n                let item: any = this.feedbackItems[i];\n                this.result[i] = item.type === 'rating' ? 0 : '';\n                this.mouseover[i] = 0;\n            }\n        }\n    }\n\n    public getFeedActive(index: number, value: number): boolean {\n        return this.result[index] >= value || this.mouseover[index] >= value;\n    }\n\n    public getFeedInActive(index: number, value: number): boolean {\n        let max: number = Math.max(this.result[index], this.mouseover[index]);\n        return max < value || this.result[index] === undefined;\n    }\n\n    public openFeedbackModal(): void {\n        this.canShowModal = true;\n    }\n\n    public closeFeedbackModal(): void {\n        this.canShowModal = false;\n        this.result = {};\n        this.mouseover = [];\n    }\n\n    public clickedRatings(index: number, value: number): void {\n        this.result[index] = value;\n    }\n\n    public submitFeedback(): void {\n        let output: any = {};\n        let feedback: Array<any> = [];\n        output['request_id'] = this.config.stackId;\n        for (let index in this.result) {\n            if (this.result.hasOwnProperty(index)) {\n                feedback.push({\n                    question: this.feedbackItems[index].question,\n                    answer: this.result[index]\n                });\n            }\n        }\n        output['feedback'] = feedback;\n        console.log(output);\n\n        this.service.submit(output).subscribe((response) => {\n            this.handleMessage('success');\n        }, error => {\n            this.handleMessage('error');\n        });\n    }\n\n    private handleMessage(type: string): void {\n        this.hasEnteredFeedback = true;\n        switch (type.toLowerCase()) {\n            case 'success':\n                this.responseClass = 'success-feedback';\n                this.responseMessage = 'Thanks for your valuable feedback!';\n                break;\n            case 'error':\n                this.responseClass = 'error-feedback';\n                this.responseMessage = 'Something unexpected happened :(';\n                break;\n            default:\n                break;\n        }\n        setTimeout(() => {\n            this.closeFeedbackModal();\n        }, 4000);\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}