{"version":3,"file":"stack-report.model.js","sourceRoot":"","sources":["../../../../../src/app/stack/models/stack-report.model.ts"],"names":[],"mappings":"AAAA;IAAA;IAKA,CAAC;IAAD,uBAAC;AAAD,CAAC,AALD,IAKC;;AAED;IAAA;IAOA,CAAC;IAAD,6BAAC;AAAD,CAAC,AAPD,IAOC;;AAED;IAAA;IAIA,CAAC;IAAD,4BAAC;AAAD,CAAC,AAJD,IAIC;;AAED;IAAA;IAIA,CAAC;IAAD,2BAAC;AAAD,CAAC,AAJD,IAIC;;AAED;IAAA;IAYA,CAAC;IAAD,gCAAC;AAAD,CAAC,AAZD,IAYC;;AAED;IAAA;IAgCA,CAAC;IAAD,kBAAC;AAAD,CAAC,AAhCD,IAgCC;;AAED;IAAA;IAGA,CAAC;IAAD,qBAAC;AAAD,CAAC,AAHD,IAGC;;AAED;IAAA;IAGA,CAAC;IAAD,8BAAC;AAAD,CAAC,AAHD,IAGC;;AAED;IAAA;IAYA,CAAC;IAAD,yBAAC;AAAD,CAAC,AAZD,IAYC","sourcesContent":["export class StackReportModel {\n    finished_at: string;\n    request_id: string;\n    result: Array<ResultInformationModel>;\n    started_at: string;\n}\n\nexport class ResultInformationModel {\n    audit: AuditInformationModel;\n    release: string;\n    manifest_name: string;\n    manifest_file_path: string;\n    recommendations: RecommendationsModel;\n    user_stack_info: UserStackInfoModel;\n}\n\nexport class AuditInformationModel {\n    ended_at: string;\n    started_at: string;\n    version: string;\n}\n\nexport class RecommendationsModel {\n    alternate: Array<ComponentInformationModel>;\n    companion: Array<ComponentInformationModel>;\n    usage_outliers: Array<OutlierInformationModel>;\n}\n\nexport class ComponentInformationModel {\n    code_metrics: any; // Ignored from strict typing as this is of least importance\n    ecosystem: string;\n    github: GithubModel;\n    latest_version: string;\n    licenses: Array<string>;\n    name: string;\n    osio_user_count: number;\n    replaces: any;\n    security: Array<any>;\n    sentiment: SentimentModel;\n    version: string;\n}\n\nexport class GithubModel {\n    contributors: number;\n    dependent_projects: number;\n    dependent_repos: number;\n    first_release_date: string;\n    forks_count: number;\n    issues: {\n        month: {\n            closed: number;\n            opened: number;\n        };\n        year: {\n            closed: number;\n            opened: number;\n        }\n    };\n    latest_release_duration: string;\n    pull_requests: {\n        month: {\n            closed: number;\n            opened: number;\n        };\n        year: {\n            closed: number;\n            opened: number;\n        }\n    };\n    size: string;\n    stargazers_count: number;\n    total_releases: number;\n    used_by: Array<any>;\n    watchers: number;\n}\n\nexport class SentimentModel {\n    latest_comment: string;\n    overall_score: number;\n}\n\nexport class OutlierInformationModel {\n    outlier_probabilty: number;\n    package_name: string;\n}\n\nexport class UserStackInfoModel {\n    analyzed_dependencies: Array<any>;\n    analyzed_dependencies_count: number;\n    dependencies: Array<ComponentInformationModel>;\n    distinct_licenses: Array<string>;\n    ecosystem: string;\n    recommendation_ready: boolean;\n    recommended_stack_licenses: Array<string>;\n    stack_license_conflict: boolean;\n    total_licenses: number;\n    unknown_dependencies: Array<any>;\n    unknown_dependencies_count: number;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}