{"version":3,"file":"stack-analyses.service.js","sourceRoot":"","sources":["../../../../src/app/stack/stack-analyses.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions  } from '@angular/http';\nimport { AuthenticationService } from 'ngx-login-client';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { WIT_API_URL } from 'ngx-fabric8-wit';\n\nimport {StackReportModel} from './models/stack-report.model';\n\n@Injectable()\nexport class StackAnalysesService {\n\n  private headers: Headers = new Headers({'Content-Type': 'application/json'});\n  private stackAnalysesUrl: string = '';\n  private cvssScale: any = {\n    low: {\n      start: 0.0,\n      end: 3.9,\n      iconClass: 'pficon pficon-warning-triangle-o',\n      displayClass: 'progress-bar-warning'\n    },\n    medium: {\n      start: 4.0,\n      end: 6.9,\n      iconClass: 'pficon pficon-warning-triangle-o',\n      displayClass: 'progress-bar-warning'\n    },\n    high: {\n      start: 7.0,\n      end: 10.0,\n      iconClass: 'pficon pficon-warning-triangle-o warning-red-color',\n      displayClass: 'progress-bar-danger'\n    }\n  };\n\n  constructor(\n    private http: Http,\n    private auth: AuthenticationService,\n  ) {\n      if (this.auth.getToken() !== null) {\n        this.headers.set('Authorization', 'Bearer ' + this.auth.getToken());\n      }\n  }\n\n  getStackAnalyses(url: string): Observable<any> {\n    let options = new RequestOptions({ headers: this.headers });\n    let stackReport: StackReportModel = null;\n    // url = 'https://gist.githubusercontent.com/jyasveer/36d3197964899eef0f1fcf5a18063b76/raw/7792af364d3d35dc72e766c907db2023e4247e60/stack-analyses-v2-response.json';\n    return this.http.get(url, options)\n    // return this.http.get(url)\n      .map(this.extractData)\n      .map((data) => {\n        stackReport = data;\n        console.log(typeof stackReport);\n        console.log(stackReport instanceof StackReportModel);\n        return stackReport;\n      })\n      .catch(this.handleError);\n  }\n\n  getCvssObj(score: number): any {\n    if (score) {\n      let iconClass: string = this.cvssScale.medium.iconClass;\n      let displayClass: string = this.cvssScale.medium.displayClass;\n      if (score >= this.cvssScale.high.start) {\n        iconClass = this.cvssScale.high.iconClass;\n        displayClass = this.cvssScale.high.displayClass;\n      }\n      return {\n        iconClass: iconClass,\n        displayClass: displayClass,\n        value: score,\n        percentScore: (score / 10 * 100)\n      };\n    }\n  }\n\n  private extractData(res: Response) {\n    let body = res.json() || {};\n    body['statusCode'] = res.status;\n    body['statusText'] = res.statusText;\n    console.log(body as StackReportModel);\n    return body as StackReportModel;\n  }\n\n  private handleError(error: Response | any) {\n    let body: any = {};\n    if (error instanceof Response) {\n      if (error && error.status && error.statusText) {\n        body = {\n          status: error.status,\n          statusText: error.statusText\n        };\n      }\n    } else {\n      body = {\n        statusText: error.message ? error.message : error.toString()\n      };\n    }\n    return Observable.throw(body);\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}